[tool.poetry]
name = "safeguard"
version = "0.1.0"
description = "Railway Oriented Programming Library"
authors = ["Demetre Dzmanashvili <demetredzmanashvili@gmail.com>"]
readme = "README.md"
packages = [{ include = "safeguard", from = "src" }]
license = "MIT"
keywords = ["result", "maybe", "railway-oriented-programming", "functional-programming", "safeguard"]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only"
]


[tool.poetry.dependencies]
python = ">=3.9, <4.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.1"
pytest-cov = "^5.0.0"
mypy = "^1.10.0"
pytest-mypy-plugins = "^3.1.2"
pytest-asyncio = "^0.23.7"
flake8 = "^7.0.0"
twine = "^5.1.0"
build = "^1.2.1"
anyio = { extras = ["asyncio"], version = "^4.4.0" }


[tool.poetry.group.tox.dependencies]
tox = "^4.15.0"


[tool.poetry.group.docs.dependencies]
lazydocs = "^0.4.8"

[tool.pytest.ini_options]
addopts = [
    "--doctest-modules",
    "--tb=short",
    "--cov=src",
    "--cov-report=term",
    "--cov-report=term-missing",
    "--cov-report=xml",
    # By default, ignore tests that only run on Python 3.10+
    #    "--ignore=tests/test_pattern_matching.py",
]
testpaths = [
    "tests",
]


[tool.mypy]
python_version = "3.12"

exclude = [".venv", "node_modules"]
cache_dir = ".mypy_cache/strict"

files = [
    "src",
    #    "tests",
]
# Exclude files with pattern matching syntax until we drop support for Python
# versions that don't support pattern matching. Trying to use with an older
# Python version results in a "invalid syntax" error from mypy
#exclude = "tests/test_pattern_matching.py"
implicit_reexport = true
strict = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
no_implicit_reexport = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.flake8]
# flake8 does not (yet?) support pyproject_old.toml; see
# https://github.com/PyCQA/flake8/issues/234
max-line-length = 99
exclude = [
    ".direnv/",
    ".tox/",
    "env/"
]
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
